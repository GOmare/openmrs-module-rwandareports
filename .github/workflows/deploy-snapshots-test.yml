# Checks whether any Maven dependencies have been updated remotely, and if so, initiates a new build

name: Deploy Snapshots on commits and depedency updates

on:
  push:
    branches: ['master']

#  schedule:
#    - cron: '0 */1 * * *'  # Run hourly on the hour

  repository_dispatch:
    types: ['deploy-snapshots']

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      # Check out the code
    - uses: actions/checkout@v2

      # Enable caching of Maven dependencies to speed up job execution.  See https://github.com/actions/cache
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

      # Set up Java 1.8 with Maven including a .m2/settings.xml file.  See https://github.com/actions/setup-java
    - name: Set up JDK 1.8 and Maven settings file
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: openmrs-repo-modules-pih-snapshots
        server-username: BINTRAY_USERNAME
        server-password: BINTRAY_PASSWORD

      # Execute the Maven command to report on current dependencies and most recently deployed dependencies
      # This is configured in the pom of the project, using the openmrs-dependencies plugin
    - name: Generate Dependency Reports
      run: mvn generate-resources -U --file pom.xml

      # Create versions.diff file containing differences if both previous and current exist and differ, empty otherwise
    - name: Diff current and previous dependency versions
      run: [ -f "$PREV_VER" ] && echo "$(diff --from-file $PREV_VER $CURR_VER || exit 0)" > $DIFF_FILE || touch $DIFF_FILE
      env:
        PREV_VER: "target/openmrs-dependency/versions-retrieved.yml"
        CURR_VER: "target/openmrs-dependency/versions.yml"
        DIFF_FILE: "target/openmrs-dependency/versions.diff"

      # Upload version artifacts to store with build results
    - name: Upload dependency reports
      uses: actions/upload-artifact@v1
      with:
        name: openmrs-dependency
        path: target/openmrs-dependency

    - name: Build on push or if versions differ
      run: echo "Here we will check $EVENT_TYPE and DIFF_RESULT to determine whether to deploy"
      env:
        EVENT_TYPE: "${{ github.event.type }}"
